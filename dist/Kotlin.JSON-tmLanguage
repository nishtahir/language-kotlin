{
  "repository": {
    "annotations": {
      "patterns": [
        {
          "comment": "Use-site annotation",
          "match": "@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\s*:\\s*?[a-zA-Z_]\\w*",
          "name": "meta.annotation.kotlin"
        },
        {
          "begin": "@[a-zA-Z_]\\w*\\s*(\\()",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.arguments.begin.kotlin"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.arguments.end.kotlin"
            }
          },
          "name": "meta.annotation.kotlin",
          "patterns": [
            {
              "include": "#code"
            },
            {
              "match": ",",
              "name": "punctuation.seperator.property.kotlin"
            }
          ]
        },
        {
          "match": "@[a-zA-Z_]\\w*",
          "name": "meta.annotation.kotlin"
        }
      ]
    },
    "class-literal": {
      "patterns": [
        {
          "begin": "(?=\\b(?:class|interface)\\s+\\w+)\\b",
          "end": "(?=\\}|$)",
          "name": "meta.class.kotlin",
          "patterns": [
            {
              "include": "#keyword"
            },
            {
              "begin": "\\b(class|interface)\\b\\s+(\\w+)",
              "beginCaptures": {
                "1": {
                  "name": "storage.modifier.kotlin"
                },
                "2": {
                  "name": "entity.name.class.kotlin"
                }
              },
              "end": "(?=\\(|\\{|:|$)",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "include": "#annotations"
                },
                {
                  "include": "#types"
                }
              ]
            },
            {
              "begin": "(\\()",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.section.group.begin.kotlin"
                },
                "1": {
                  "name": "punctuation.definition.parameters.begin.kotlin"
                }
              },
              "end": "(\\))",
              "endCaptures": {
                "0": {
                  "name": "punctuation.section.group.end.kotlin"
                },
                "1": {
                  "name": "punctuation.definition.parameters.end.kotlin"
                }
              },
              "name": "meta.parameters.kotlin",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "include": "#class-parameter-list"
                }
              ]
            },
            {
              "begin": "\\{",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.section.group.begin.kotlin"
                }
              },
              "end": "\\}",
              "endCaptures": {
                "0": {
                  "name": "punctuation.section.group.end.kotlin"
                }
              },
              "name": "meta.block.kotlin",
              "patterns": [
                {
                  "include": "#code"
                }
              ]
            }
          ]
        }
      ],
      "repository": {
        "class-parameter-list": {
          "patterns": [
            {
              "include": "#annotations"
            },
            {
              "include": "#keywords"
            },
            {
              "match": "(\\w+)\\s*(:)",
              "captures": {
                "1": {
                  "name": "variable.parameter.function.kotlin"
                },
                "2": {
                  "name": "keyword.operator.declaration.kotlin"
                }
              }
            },
            {
              "match": ",",
              "name": "punctuation.seperator.kotlin"
            },
            {
              "include": "#types"
            }
          ]
        }
      }
    },
    "comments": {
      "patterns": [
        {
          "include": "#inline"
        },
        {
          "begin": "/\\*",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.begin.kotlin"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.end.kotlin"
            }
          },
          "name": "comment.block.kotlin",
          "patterns": [
            {
              "include": "#nested"
            }
          ]
        }
      ],
      "repository": {
        "inline": {
          "patterns": [
            {
              "match": "(//).*$\\n?",
              "captures": {
                "0": {
                  "name": "punctuation.definition.comment.kotlin"
                },
                "1": {
                  "name": "comment.line.double-slash.kotlin"
                }
              }
            }
          ]
        },
        "nested": {
          "patterns": [
            {
              "begin": "/\\*",
              "end": "\\*/",
              "patterns": [
                {
                  "include": "#nested"
                }
              ]
            }
          ]
        }
      }
    },
    "builtin-functions": {
      "patterns": [
        {
          "match": "\\b(apply|also|let|run|takeIf|takeWhile|takeUnless|with|print|println)\\b\\s*(?={|\\()",
          "captures": {
            "1": {
              "name": "support.function.kotlin"
            }
          }
        },
        {
          "match": "\\b(arrayListOf|mutableListOf|listOf|mutableMapOf|mapOf|mutableSetOf|setOf)\\b\\s*(?={|\\()",
          "captures": {
            "1": {
              "name": "support.function.kotlin"
            }
          }
        }
      ]
    },
    "literal-functions": {
      "patterns": [
        {
          "begin": "(?=\\b(?:fun)\\b)",
          "end": "(?=$|=|\\})",
          "name": "meta.function.kotlin",
          "patterns": [
            {
              "include": "#keywords"
            },
            {
              "begin": "\\bfun\\b",
              "beginCaptures": {
                "0": {
                  "name": "keyword.other.kotlin"
                }
              },
              "end": "(?=\\()",
              "patterns": [
                {
                  "match": "(`[^`]*`)",
                  "comment": "Backtick quoted function names",
                  "captures": {
                    "0": {
                      "name": "entity.name.function.kotlin"
                    },
                    "1": {
                      "name": "string.quoted.backtick.kotlin"
                    }
                  }
                },
                {
                  "match": "([\\.<\\?>\\w]+\\.)?(\\w+)",
                  "captures": {
                    "2": {
                      "name": "entity.name.function.kotlin"
                    }
                  }
                },
                {
                  "include": "#types"
                }
              ]
            },
            {
              "begin": "(\\()",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.section.group.begin.kotlin"
                },
                "1": {
                  "name": "punctuation.definition.parameters.begin.kotlin"
                }
              },
              "end": "(\\))",
              "endCaptures": {
                "0": {
                  "name": "punctuation.section.group.end.kotlin"
                },
                "1": {
                  "name": "punctuation.definition.parameters.end.kotlin"
                }
              },
              "name": "meta.parameters.kotlin",
              "patterns": [
                {
                  "include": "#function-parameter-list"
                }
              ]
            },
            {
              "begin": "\\{",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.section.group.begin.kotlin"
                }
              },
              "end": "\\}",
              "endCaptures": {
                "0": {
                  "name": "punctuation.section.group.end.kotlin"
                }
              },
              "name": "meta.block.kotlin",
              "patterns": [
                {
                  "include": "#code"
                }
              ]
            },
            {
              "include": "#return-type"
            }
          ]
        }
      ],
      "repository": {
        "function-parameter-list": {
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "include": "#annotations"
            },
            {
              "include": "#keywords"
            },
            {
              "match": "(\\w+)\\s*(:)",
              "captures": {
                "1": {
                  "name": "variable.parameter.function.kotlin"
                },
                "2": {
                  "name": "keyword.operator.declaration.kotlin"
                }
              }
            },
            {
              "match": ",",
              "name": "punctuation.seperator.kotlin"
            },
            {
              "include": "#types"
            }
          ]
        },
        "return-type": {
          "patterns": [
            {
              "name": "meta.return.type.kotlin",
              "begin": "(?<=\\))\\s*(:)(?=\\s*\\S)",
              "end": "(?<![:|&])(?=$|^|[{};,]|//)",
              "patterns": [
                {
                  "include": "#types"
                }
              ]
            }
          ]
        }
      }
    },
    "class-ident": {
      "patterns": [
        {
          "match": "\\b[A-Z]\\w+\\b",
          "name": "entity.name.type.class.kotlin",
          "comment": "Classes generally start with an Uppercase Char"
        }
      ]
    },
    "imports": {
      "patterns": [
        {
          "match": "^\\s*(import)\\s+([^ $.]+(?:\\.(?:[`][^$`]+[`]|[^` $.]+))+)(?:\\s+(as)\\s+([`][^$`]+[`]|[^` $.]+))?",
          "captures": {
            "1": {
              "name": "keyword.other.import.kotlin"
            },
            "2": {
              "name": "storage.modifier.import.kotlin"
            },
            "3": {
              "name": "keyword.other.kotlin"
            },
            "4": {
              "name": "entity.name.type"
            }
          },
          "name": "meta.import.kotlin"
        }
      ]
    },
    "parens": {
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.group.begin.kotlin"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.group.end.kotlin"
            }
          },
          "name": "meta.group.kotlin",
          "patterns": [
            {
              "include": "#keyword-punctuation"
            },
            {
              "include": "#parameters"
            },
            {
              "include": "#code"
            }
          ]
        }
      ]
    },
    "braces": {
      "patterns": [
        {
          "begin": "\\{",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.group.begin.kotlin"
            }
          },
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.group.end.kotlin"
            }
          },
          "name": "meta.block.kotlin",
          "patterns": [
            {
              "include": "#code"
            }
          ]
        }
      ]
    },
    "brackets": {
      "patterns": [
        {
          "begin": "\\[",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.brackets.begin.kotlin"
            }
          },
          "end": "\\]",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.brackets.end.kotlin"
            }
          },
          "name": "meta.brackets.kotlin",
          "patterns": [
            {
              "include": "#code"
            }
          ]
        }
      ]
    },
    "code": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#comments-inline"
        },
        {
          "include": "#annotations"
        },
        {
          "include": "#parens"
        },
        {
          "include": "#braces"
        },
        {
          "include": "#brackets"
        },
        {
          "include": "#class-literal"
        },
        {
          "include": "#literal-functions"
        },
        {
          "include": "#literals"
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#types"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#punctuations"
        },
        {
          "include": "#builtin-functions"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "(\\!in|\\!is|as\\?)",
          "name": "keyword.operator.kotlin"
        },
        {
          "match": "\\b(in|is|as|assert)\\b",
          "name": "keyword.operator.kotlin"
        },
        {
          "match": "\\b(const)\\b",
          "name": "storage.modifier.kotlin"
        },
        {
          "match": "\\b(val|var)\\b",
          "name": "storage.type.kotlin"
        },
        {
          "match": "\\b(\\_)\\b",
          "name": "punctuation.definition.variable.kotlin"
        },
        {
          "match": "\\b(data|inline|tailrec|operator|infix|typealias|reified)\\b",
          "name": "storage.type.kotlin"
        },
        {
          "match": "\\b(external|public|private|protected|internal|abstract|final|sealed|enum|open|annotation|override|vararg|typealias|expect|actual|suspend|yield|out|in|lateinit)\\b",
          "name": "storage.modifier.kotlin"
        },
        {
          "match": "\\b(try|catch|finally|throw)\\b",
          "name": "keyword.control.catch-exception.kotlin"
        },
        {
          "match": "\\b(if|else|when)\\b",
          "name": "keyword.control.conditional.kotlin"
        },
        {
          "match": "\\b(while|for|do|return|break|continue)\\b",
          "name": "keyword.control.kotlin"
        },
        {
          "match": "\\b(constructor|init)\\b",
          "name": "entity.name.function.constructor"
        },
        {
          "match": "\\b(companion|object)\\b",
          "name": "storage.type.kotlin"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "\\b(and|or|not|inv)\\b",
          "name": "keyword.operator.bitwise.kotlin"
        },
        {
          "match": "(==|!=|===|!==|<=|>=|<|>)",
          "name": "keyword.operator.comparison.kotlin"
        },
        {
          "match": "(=)",
          "name": "keyword.operator.assignment.kotlin"
        },
        {
          "match": "(:(?!:))",
          "name": "keyword.operator.declaration.kotlin"
        },
        {
          "match": "(\\?:)",
          "name": "keyword.operator.elvis.kotlin"
        },
        {
          "match": "(\\-\\-|\\+\\+)",
          "name": "keyword.operator.increment-decrement.kotlin"
        },
        {
          "match": "(\\-|\\+|\\*|\\/|%)",
          "name": "keyword.operator.arithmetic.kotlin"
        },
        {
          "match": "(\\+\\=|\\-\\=|\\*\\=|\\/\\=)",
          "name": "keyword.operator.arithmetic.assign.kotlin"
        },
        {
          "match": "(\\!|\\&\\&|\\|\\|)",
          "name": "keyword.operator.logical.kotlin"
        },
        {
          "match": "(\\.\\.)",
          "name": "keyword.operator.range.kotlin"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match": "\\b(class)\\b",
          "name": "constant.language.kotlin"
        },
        {
          "match": "\\b(this|super)\\b",
          "name": "variable.language.kotlin"
        }
      ]
    },
    "punctuations": {
      "patterns": [
        {
          "match": "::",
          "name": "punctuation.accessor.reference.kotlin"
        },
        {
          "match": "\\?\\.",
          "name": "punctuation.accessor.dot.safe.kotlin"
        },
        {
          "match": "(?<!\\?)\\.",
          "name": "punctuation.accessor.dot.kotlin"
        },
        {
          "match": "\\,",
          "name": "punctuation.seperator.kotlin"
        },
        {
          "match": "\\;",
          "name": "punctuation.terminator.kotlin"
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "include": "#boolean"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#string"
        },
        {
          "include": "#null"
        }
      ],
      "repository": {
        "boolean": {
          "patterns": [
            {
              "match": "\\b(true|false)\\b",
              "name": "constant.language.boolean.kotlin"
            }
          ]
        },
        "numeric": {
          "patterns": [
            {
              "match": "\\b(0(x|X)[0-9A-Fa-f_]*)([LuU]|[uU]L)?\\b",
              "name": "constant.numeric.hex.kotlin"
            },
            {
              "match": "\\b(0(b|B)[0-1_]*)([LuU]|[uU]L)?\\b",
              "name": "constant.numeric.binary.kotlin"
            },
            {
              "match": "\\b([0-9][0-9_]*\\.[0-9][0-9_]*[fFL]?)\\b",
              "name": "constant.numeric.float.kotlin"
            },
            {
              "match": "\\b([0-9][0-9_]*([fFLuU]|[uU]L)?)\\b",
              "name": "constant.numeric.integer.kotlin"
            }
          ]
        },
        "string": {
          "patterns": [
            {
              "begin": "\"\"\"",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.string.begin.kotlin"
                }
              },
              "end": "\"\"\"",
              "endCaptures": {
                "0": {
                  "name": "punctuation.definition.string.end.kotlin"
                }
              },
              "name": "string.quoted.triple.kotlin",
              "patterns": [
                {
                  "include": "#string-content"
                }
              ]
            },
            {
              "begin": "(?!')\"(?!')",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.string.begin.kotlin"
                }
              },
              "end": "\"",
              "endCaptures": {
                "0": {
                  "name": "punctuation.definition.string.end.kotlin"
                }
              },
              "name": "string.quoted.double.kotlin",
              "patterns": [
                {
                  "include": "#string-content"
                }
              ]
            }
          ],
          "repository": {
            "string-content": {
              "patterns": [
                {
                  "match": "\\\\[0\\\\tnr\"']",
                  "name": "constant.character.escape.kotlin"
                },
                {
                  "match": "\\\\(x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|.)",
                  "name": "constant.character.escape.unicode.kotlin"
                },
                {
                  "begin": "\\$(\\{)",
                  "beginCaptures": {
                    "1": {
                      "name": "punctuation.section.block.begin.kotlin"
                    }
                  },
                  "end": "\\}",
                  "endCaptures": {
                    "0": {
                      "name": "punctuation.section.block.end.kotlin"
                    }
                  },
                  "name": "entity.string.template.element.kotlin"
                },
                {
                  "match": "\\$[a-zA-Z_]\\w*",
                  "name": "entity.string.template.element.kotlin"
                }
              ]
            }
          }
        },
        "null": {
          "patterns": [
            {
              "match": "\\b(null)\\b",
              "name": "constant.language.null.kotlin"
            }
          ]
        }
      }
    },
    "object-literal": {
      "patterns": [
        {
          "begin": "(?=\\b(?:object)\\b((\\s*:\\s*)|\\s+)\\w+)",
          "end": "(?=\\}|$)",
          "name": "meta.class.kotlin",
          "patterns": [
            {
              "include": "#annotation"
            },
            {
              "begin": "\\b(object)\\b\\s*(:)\\s*(\\w+)",
              "beginCaptures": {
                "1": {
                  "name": "storage.modifier.kotlin"
                },
                "2": {
                  "name": "keyword.operator.declaration.kotlin"
                },
                "3": {
                  "name": "entity.name.class.kotlin"
                }
              },
              "end": "(?=\\(|\\{|$)",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "include": "#annotations"
                },
                {
                  "include": "#types"
                }
              ]
            },
            {
              "begin": "(\\()",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.section.group.begin.kotlin"
                },
                "1": {
                  "name": "punctuation.definition.parameters.begin.kotlin"
                }
              },
              "end": "(\\))",
              "endCaptures": {
                "0": {
                  "name": "punctuation.section.group.end.kotlin"
                },
                "1": {
                  "name": "punctuation.definition.parameters.end.kotlin"
                }
              },
              "name": "meta.parameters.kotlin",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "include": "#class-parameter-list"
                }
              ]
            },
            {
              "begin": "\\{",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.section.group.begin.kotlin"
                }
              },
              "end": "\\}",
              "endCaptures": {
                "0": {
                  "name": "punctuation.section.group.end.kotlin"
                }
              },
              "name": "meta.block.kotlin",
              "patterns": [
                {
                  "include": "#code"
                }
              ]
            }
          ]
        }
      ],
      "repository": {
        "class-parameter-list": {
          "patterns": [
            {
              "include": "#annotations"
            },
            {
              "include": "#keywords"
            },
            {
              "match": "(\\w+)\\s*(:)",
              "captures": {
                "1": {
                  "name": "variable.parameter.function.kotlin"
                },
                "2": {
                  "name": "keyword.operator.declaration.kotlin"
                }
              }
            },
            {
              "match": ",",
              "name": "punctuation.seperator.kotlin"
            },
            {
              "include": "#types"
            }
          ]
        }
      }
    },
    "package": {
      "patterns": [
        {
          "match": "^\\s*(package)\\b(?:\\s*([^ ;$]+)\\s*)?",
          "captures": {
            "1": {
              "name": "keyword.other.kotlin"
            },
            "2": {
              "name": "entity.name.package.kotlin"
            }
          }
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "include": "#built-in-types"
        },
        {
          "include": "#class-ident"
        },
        {
          "match": "(?<![/=\\-+!*%<>&|\\^~.])(->)(?![/=\\-+!*%<>&|\\^~.])",
          "captures": {
            "1": {
              "name": "keyword.operator.type.function.kotlin"
            }
          }
        },
        {
          "match": "\\?(?!\\.)",
          "name": "keyword.operator.type.nullable.kotlin"
        },
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.group.begin.kotlin"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.group.end.kotlin"
            }
          },
          "patterns": [
            {
              "include": "#types"
            }
          ]
        }
      ],
      "repository": {
        "built-in-types": {
          "patterns": [
            {
              "match": "\\b(Nothing|Any|Unit|String|CharSequence|Int|Boolean|Char|Long|Double|Float|Short|Byte|UByte|UShort|UInt|ULong|Array|List|Map|Set|dynamic)\\b(\\?)?",
              "name": "support.class.kotlin"
            },
            {
              "match": "\\b(IntArray|BooleanArray|CharArray|LongArray|DoubleArray|FloatArray|ShortArray|ByteArray|UByteArray|UShortArray|UIntArray|ULongArray)\\b(\\?)?",
              "name": "support.class.kotlin"
            }
          ]
        }
      }
    }
  },
  "fileTypes": [
    "kt",
    "kts"
  ],
  "foldingStartMarker": "(\\{\\s*(//.*)?$|^\\s*// \\{\\{\\{)",
  "foldingStopMarker": "^\\s*(\\}|// \\}\\}\\}$)",
  "name": "Kotlin",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#package"
    },
    {
      "include": "#imports"
    },
    {
      "include": "#code"
    }
  ],
  "scopeName": "source.kotlin",
  "uuid": "d9380650-5edc-447d-8dbd-98838c7d0adf"
}